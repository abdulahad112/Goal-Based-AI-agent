# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W44ZqcoN74McluqIkay5VwqKkUgmer5-
"""

import random
import time

class Environment:
    def __init__(self, rows, cols):
        self.grid = [['Dirty' if random.random() < 0.5 else 'Clean' for _ in range(cols)] for _ in range(rows)]
        self.rows = rows
        self.cols = cols

    def is_dirty(self, x, y):
        return self.grid[x][y] == 'Dirty'

    def clean(self, x, y):
        self.grid[x][y] = 'Clean'

    def print_grid(self):
        for row in self.grid:
            print(row)
        print("\n")


class GoalBasedAgent:
    def __init__(self, env):
        self.env = env
        self.x = 0
        self.y = 0

    def goal(self):
        # Goal: Clean all dirty tiles
        for i in range(self.env.rows):
            for j in range(self.env.cols):
                if self.env.is_dirty(i, j):
                    return True  # There's still something to clean
        return False  # Goal achieved

    def perceive_and_act(self):
        for i in range(self.env.rows):
            for j in range(self.env.cols):
                self.x, self.y = i, j
                if self.env.is_dirty(i, j):
                    print(f"Tile ({i},{j}) is Dirty. Cleaning...")
                    self.env.clean(i, j)
                else:
                    print(f"Tile ({i},{j}) is already Clean.")

                self.env.print_grid()
                time.sleep(0.5)  # Delay for better visualization

    def run(self):
        print("Initial Room State:")
        self.env.print_grid()
        while self.goal():
            self.perceive_and_act()
        print("Goal Achieved: All tiles are clean!")


# Run the agent
env = Environment(3, 3)  # You can change the room size here
agent = GoalBasedAgent(env)
agent.run()